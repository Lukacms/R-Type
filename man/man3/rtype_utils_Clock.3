.TH "rtype::utils::Clock" 3 "Sun Jan 14 2024" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
rtype::utils::Clock \- Class to keep track of time\&. Can be reset, and can get time in seconds or miliseconds\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Clock\&.hh>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBClock\fP (\fBClock\fP const &to_copy)=default"
.br
.ti -1c
.RI "\fBClock\fP (\fBClock\fP &&to_move)=default"
.br
.ti -1c
.RI "\fBClock\fP & \fBoperator=\fP (\fBClock\fP const &to_copy)=default"
.br
.ti -1c
.RI "\fBClock\fP & \fBoperator=\fP (\fBClock\fP &&to_move)=default"
.br
.ti -1c
.RI "std::chrono::duration< double > \fBget_elapsed_time\fP ()"
.br
.RI "Get elapsed time in raw chrono format\&. "
.ti -1c
.RI "double \fBget_elapsed_time_in_s\fP ()"
.br
.RI "Get elapsed time in seconds\&. "
.ti -1c
.RI "double \fBget_elapsed_time_in_ms\fP ()"
.br
.RI "Get elapsed time in milliseconds\&. "
.ti -1c
.RI "void \fBreset\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class to keep track of time\&. Can be reset, and can get time in seconds or miliseconds\&. 
.SH "Member Function Documentation"
.PP 
.SS "std::chrono::duration< double > rtype::utils::Clock::get_elapsed_time ()"

.PP
Get elapsed time in raw chrono format\&. 
.PP
\fBReturns\fP
.RS 4
chrono::duration<double> 
.RE
.PP

.SS "double rtype::utils::Clock::get_elapsed_time_in_ms ()"

.PP
Get elapsed time in milliseconds\&. 
.PP
\fBReturns\fP
.RS 4
double 
.RE
.PP

.SS "double rtype::utils::Clock::get_elapsed_time_in_s ()"

.PP
Get elapsed time in seconds\&. 
.PP
\fBReturns\fP
.RS 4
double 
.RE
.PP

.SS "void rtype::utils::Clock::reset ()"
reset the clock 

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
