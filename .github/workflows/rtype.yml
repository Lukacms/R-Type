name: CI R-Type
on:
  push:
    branches-ignore:
      - feature/ignore/**
  pull_request:
    branches-ignore:
      - feature/ignore/**

  workflow_dispatch:

env:
  MIRROR_URL: "git@github.com:EpitechPromo2026/B-CPP-500-BDX-5-2-rtype-luka.camus.git"
  EXECUTABLE: "r-type_server,r-type_client"

jobs:
  check_repository_cleanliness:
    name: "Check if the repository is clean and void of any unwanted files (temp, files, binary files, etc.)"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Scan files
      run: |
        arr=($(find . \( -name "#*#" -o -name "*~" \
        -o -name "*.o" -o -name "*.a" -o -name "*.hi" \
        -o -name "*.so" -o -name "*.gcno" -o -name "*.gcda" -o -name "*.gcov" \
         -o -path '*tmp/*' -o -name "__pycache__" \)))
        for i in ${arr[@]}; do echo "::error file=$i,line=1,endLine=1,title=Unwanted file detected::$i"; done
        if ((${#arr[@]})); then
          exit 1
        fi

  check_status_repos:
    name: "Check if all files are in the linter"
    needs: check_repository_cleanliness
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: install packages
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y clang-tidy-12 ccache
        sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-12 100
        clang++ --version
        clang-tidy --version
    - name: run linter
      run: clang-format -i -style=WebKit `find -name *.cpp -o *.hh -o *.hpp`

  job_run_program:
    needs: check_status_repos
    runs-on: ubuntu-latest
    steps:
    - name : Install packages
      run: |
          sudo apt-get update -qq
          sudo apt-get install -y ninja-build clang-tidy-12 ccache
          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-12 100
          sudo apt-get install -y --no-install-recommends libgtest-dev
          clang++ --version
          clang-tidy --version
    - uses: extractions/setup-just@v1
      with:
        just-version: 0.8 # optional semver specification, otherwise latest
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Compilation test
      run: just ninja
      shell: bash
      timeout-minutes: 5
        #   - name: Check executable files exists
        #     run: |
        #       IFS=',' read -ra ADDR <<< $EXECUTABLES
        #       for i in "${ADDR[@]}"; do
        #         if [[ ! -x "./${i}" ]]; then
        #           exit 1
        #         fi
        #       done

        #  run_tests:
        #    needs: job_run_program
        #    if: ${{ github.event_name == 'pull_request' }}
        #    runs-on: ubuntu-latest
        #    steps:
        #    - name : Install packages
        #      run: |
        #          sudo apt-get update -qq
        #          sudo apt-get install -y ninja-build clang-tidy-12 ccache
        #          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-12 100
        #          sudo apt-get install -y --no-install-recommends libsfml-dev catch2 make gcovr
        #          clang++ --version
        #          clang-tidy --version
        #    - uses: actions/checkout@v3
        #      with:
        #        fetch-depth: 0
        #    - name: Compilation test
        #      run: make tests_run
        #      shell: bash
        #      timeout-minutes: 5

  push_to_mirror:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: check_status_repos
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: pixta-dev/repository-mirroring-action@v1
      with:
        target_repo_url: ${{ env.MIRROR_URL }}
        ssh_private_key:
          ${{ secrets.SSH_PRIVATE_KEY }}
